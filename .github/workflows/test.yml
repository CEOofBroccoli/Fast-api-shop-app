name: Test Suite

on:
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:6-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-asyncio pytest-cov httpx faker

      - name: Set environment variables
        run: |
          echo "DATABASE_URL=postgresql://testuser:testpass@localhost:5432/testdb" >> $GITHUB_ENV
          echo "JWT_SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
          echo "REDIS_HOST=localhost" >> $GITHUB_ENV
          echo "REDIS_PORT=6379" >> $GITHUB_ENV
          echo "ENVIRONMENT=test" >> $GITHUB_ENV

      - name: Run database migrations
        run: |
          python -m alembic upgrade head

      - name: Run unit tests
        run: |
          export PYTHONPATH="${{ github.workspace }}"
          pytest tests/ -v --cov=backend/app --cov-report=term-missing

      - name: Run integration tests
        run: |
          export PYTHONPATH="${{ github.workspace }}"
          pytest tests/ -k "integration" -v

  api-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:6-alpine
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install httpx pytest

      - name: Set environment variables
        run: |
          echo "DATABASE_URL=postgresql://testuser:testpass@localhost:5432/testdb" >> $GITHUB_ENV
          echo "JWT_SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
          echo "REDIS_HOST=localhost" >> $GITHUB_ENV
          echo "REDIS_PORT=6379" >> $GITHUB_ENV

      - name: Run database migrations
        run: python -m alembic upgrade head

      - name: Start FastAPI server
        run: |
          export PYTHONPATH="${{ github.workspace }}"
          cd ${{ github.workspace }}
          python -m uvicorn backend.app.main:app --host 0.0.0.0 --port 8000 &
          sleep 10

      - name: Run API tests
        run: |
          export PYTHONPATH="${{ github.workspace }}"
          pytest tests/ -k "api" -v
