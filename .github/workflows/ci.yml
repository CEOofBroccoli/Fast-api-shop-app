name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.6.1"

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:6-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-asyncio pytest-cov httpx

      - name: Set environment variables
        run: |
          echo "DATABASE_URL=postgresql://testuser:testpass@localhost:5432/testdb" >> $GITHUB_ENV
          echo "JWT_SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
          echo "REDIS_HOST=localhost" >> $GITHUB_ENV
          echo "REDIS_PORT=6379" >> $GITHUB_ENV
          echo "REDIS_PASSWORD=" >> $GITHUB_ENV
          echo "ENVIRONMENT=test" >> $GITHUB_ENV

      - name: Run database migrations
        run: |
          cd ${{ github.workspace }}
          python -m alembic upgrade head

      - name: Run linting with flake8
        run: |
          pip install flake8
          flake8 backend/app --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 backend/app --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run type checking with mypy
        run: |
          pip install mypy types-redis
          mypy backend/app --ignore-missing-imports

      - name: Run tests with pytest
        run: |
          export PYTHONPATH="${{ github.workspace }}"
          pytest tests/ -v --cov=backend/app --cov-report=xml --cov-report=html

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Security scan with bandit
        run: |
          pip install bandit
          bandit -r backend/app -f json -o bandit-report.json || true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            coverage.xml
            htmlcov/
            bandit-report.json

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t fastapi-shop-app:${{ github.sha }} .

      - name: Test Docker image
        run: |
          docker run --rm fastapi-shop-app:${{ github.sha }} python -c "import backend.app.main; print('Docker build successful')"

      - name: Save Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker save fastapi-shop-app:${{ github.sha }} | gzip > fastapi-shop-app.tar.gz

      - name: Upload Docker image artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: fastapi-shop-app.tar.gz
          retention-days: 1
